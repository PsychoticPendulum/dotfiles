### THIS FILE IS GENERATED BY PUPPET ###
# do not modify                        

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $term kitty

set $win Mod4
set $altgr Mod2
set $caps Mod3
set $menu Mod5
set $alt Mod1

set $scroll_up button4
set $scroll_down button5

# Keycode map defines (empty if no keycodes defined)
set $kc_j 44
set $kc_k 45
set $kc_l 46
set $kc_semicolon 47
set $kc_squote 48
set $kc_slash 61
set $kc_bslash 51
set $kc_backtick 49
set $kc_comma 59
set $kc_lt 59
set $kc_period 60
set $kc_gt 60
set $kc_pause 127
set $kc_equals 21

# Font for window titles. 
font pango:Noto monospace 11.0
# Use Mouse+$win to drag floating windows to their wanted position
floating_modifier $win

# kill focused window
bindsym $win+Shift+q kill

set $rofi_tmux_key z

# launchers
bindsym $win+c exec rofi -show 'window' -config ~/.config/rofi/modes/window.rasi
bindsym $win+d exec rofi -show 'run' -config ~/.config/rofi/modes/run.rasi
bindsym $caps+$alt+x exec rofi -show 'ssh' -config ~/.config/rofi/modes/ssh.rasi
bindsym $caps+x exec rofi -show 'ssh_sw' -config ~/.config/rofi/modes/ssh_sw.rasi
bindsym $caps+Control+x exec rofi -show 'ssh_float' -config ~/.config/rofi/modes/ssh_float.rasi
bindsym $win+$alt+x exec rofi -show 'sshtmux' -config ~/.config/rofi/modes/sshtmux.rasi
bindsym $win+x exec rofi -show 'sshtmux_sw' -config ~/.config/rofi/modes/sshtmux_sw.rasi
bindsym $win+Control+x exec rofi -show 'sshtmux_float' -config ~/.config/rofi/modes/sshtmux_float.rasi
bindsym $win+$rofi_tmux_key exec rofi -show 'tmux' -config ~/.config/rofi/modes/tmux.rasi
bindsym $win+Control+$rofi_tmux_key exec rofi -show 'tmux_float' -config ~/.config/rofi/modes/tmux_float.rasi
bindsym $win+Shift+$rofi_tmux_key exec rofi -show 'tmux_new' -config ~/.config/rofi/modes/tmux_new.rasi
bindsym $win+p exec rofi -show 'pa' -config ~/.config/rofi/modes/pa.rasi
bindsym $caps+w exec rofi -show 'i3ws_sw' -config ~/.config/rofi/modes/i3ws_sw.rasi
bindsym $caps+Shift+w exec rofi -show 'i3ws_mv' -config ~/.config/rofi/modes/i3ws_mv.rasi
bindsym $caps+$alt+w exec rofi -show 'i3ws_mvsw' -config ~/.config/rofi/modes/i3ws_mvsw.rasi
bindsym $caps+r exec rofi -show 'i3ws_rename' -config ~/.config/rofi/modes/i3ws_rename.rasi
bindsym $win+$alt+r exec rofi -show 'recentfiles [~/Downloads]' -config ~/.config/rofi/modes/recentfiles.rasi
bindsym $caps+d exec rofi -show 'displaycontrol [brightness]' -config ~/.config/rofi/modes/displaycontrol.rasi
bindsym $caps+l exec rofi -show 'screenlayout' -config ~/.config/rofi/modes/screenlayout.rasi

bindcode $win+$kc_pause exec i3lock -c 101010 -e

# change focus
bindsym $win+h focus left
bindsym $win+j focus down
bindsym $win+k focus up
bindsym $win+l focus right

bindsym $win+Left focus left
bindsym $win+Down focus down
bindsym $win+Up focus up
bindsym $win+Right focus right

# move focused window
bindsym $win+Shift+h move left
bindsym $win+Shift+j move down
bindsym $win+Shift+k move up
bindsym $win+Shift+l move right

bindsym $win+Shift+Left move left
bindsym $win+Shift+Down move down
bindsym $win+Shift+Up move up
bindsym $win+Shift+Right move right

# split in horizontal orientation
bindsym $win+$alt+h split h

# split in vertical orientation
bindsym $win+$alt+v split v

# enter fullscreen mode for the focused container
bindsym $win+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $win+s layout stacking
bindsym $win+w layout tabbed
bindsym $win+e layout toggle split

# toggle tiling / floating
bindsym $win+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $win+space focus mode_toggle

# focus the parent container
bindsym $win+a focus parent

# focus the child container
#bindsym $win+d focus child

bindsym $caps+s scratchpad show
bindsym $caps+Shift+s move scratchpad

# Keybindings for umnlauts, eszet, degree sym and eur sign on non DE layout
bindsym  --release $caps+o       exec "xdotool type ö"
bindsym  --release $caps+Shift+o exec "xdotool type Ö"
bindsym  --release $caps+u       exec "xdotool type ü"
bindsym  --release $caps+Shift+u exec "xdotool type Ü"
bindsym  --release $caps+a       exec "xdotool type ä"
bindsym  --release $caps+Shift+a exec "xdotool type Ä"
bindsym  --release $caps+e       exec "xdotool type €"
bindcode --release $caps+$kc_equals exec "xdotool type ß"
#bindcode --release $caps+49      exec "xdotool type °"


# static workspace output pins (if empty, no output pins are configured)
workspace 0:1 output DisplayPort-0
workspace 10:2 output DisplayPort-2
workspace 30:4 output DisplayPort-0
workspace 40:5 output DisplayPort-0

# dynamic workspace output pins (if empty, no dynamic workspace output pins are configured)
workspace 3000:tv output HDMI-A-0
workspace 4000:avr output DisplayPort-1

# switch to workspace
bindsym $win+1 exec i3wsmgr-msg ws switch 1
bindsym $win+2 exec i3wsmgr-msg ws switch 2
bindsym $win+3 exec i3wsmgr-msg ws switch 3
bindsym $win+4 exec i3wsmgr-msg ws switch 4
bindsym $win+5 exec i3wsmgr-msg ws switch 5
bindsym $win+6 exec i3wsmgr-msg ws switch 6
bindsym $win+7 exec i3wsmgr-msg ws switch 7
bindsym $win+8 exec i3wsmgr-msg ws switch 8
bindsym $win+9 exec i3wsmgr-msg ws switch 9
bindsym $win+F1 exec i3wsmgr-msg ws switch F1
bindsym $win+F2 exec i3wsmgr-msg ws switch F2
bindsym $win+F3 exec i3wsmgr-msg ws switch F3
bindsym $win+F4 exec i3wsmgr-msg ws switch F4
bindsym $win+F5 exec i3wsmgr-msg ws switch F5
bindsym $win+F6 exec i3wsmgr-msg ws switch F6
bindsym $win+F7 exec i3wsmgr-msg ws switch F7
bindsym $win+F8 exec i3wsmgr-msg ws switch F8
bindsym $caps+1 exec i3wsmgr-msg ws switch C1
bindsym $caps+2 exec i3wsmgr-msg ws switch C2
bindsym $caps+3 exec i3wsmgr-msg ws switch C3
bindsym $caps+4 exec i3wsmgr-msg ws switch C4
bindsym $caps+5 exec i3wsmgr-msg ws switch C5
bindsym $caps+6 exec i3wsmgr-msg ws switch C6

# move focused container to workspace
bindsym $win+Shift+1 move container to workspace number 0:1
bindsym $win+Shift+2 move container to workspace number 10:2
bindsym $win+Shift+3 move container to workspace number 20:3
bindsym $win+Shift+4 move container to workspace number 30:4
bindsym $win+Shift+5 move container to workspace number 40:5
bindsym $win+Shift+6 move container to workspace number 50:6
bindsym $win+Shift+7 move container to workspace number 60:7
bindsym $win+Shift+8 move container to workspace number 70:8
bindsym $win+Shift+9 move container to workspace number 80:9
bindsym $win+Shift+F1 move container to workspace number 200:F1
bindsym $win+Shift+F2 move container to workspace number 210:F2
bindsym $win+Shift+F3 move container to workspace number 220:F3
bindsym $win+Shift+F4 move container to workspace number 230:F4
bindsym $win+Shift+F5 move container to workspace number 240:F5
bindsym $win+Shift+F6 move container to workspace number 250:F6
bindsym $win+Shift+F7 move container to workspace number 260:F7
bindsym $win+Shift+F8 move container to workspace number 270:F8
bindsym $caps+Shift+1 move container to workspace number 100:C1
bindsym $caps+Shift+2 move container to workspace number 110:C2
bindsym $caps+Shift+3 move container to workspace number 120:C3
bindsym $caps+Shift+4 move container to workspace number 130:C4
bindsym $caps+Shift+5 move container to workspace number 140:C5
bindsym $caps+Shift+6 move container to workspace number 150:C6

# pin to workspace based on class ending
assign [class="^.*-ws1$"] → number 0:1
assign [class="^.*-ws2$"] → number 10:2
assign [class="^.*-ws3$"] → number 20:3
assign [class="^.*-ws4$"] → number 30:4
assign [class="^.*-ws5$"] → number 40:5
assign [class="^.*-ws6$"] → number 50:6
assign [class="^.*-ws7$"] → number 60:7
assign [class="^.*-ws8$"] → number 70:8
assign [class="^.*-ws9$"] → number 80:9
assign [class="^.*-wsF1$"] → number 200:F1
assign [class="^.*-wsF2$"] → number 210:F2
assign [class="^.*-wsF3$"] → number 220:F3
assign [class="^.*-wsF4$"] → number 230:F4
assign [class="^.*-wsF5$"] → number 240:F5
assign [class="^.*-wsF6$"] → number 250:F6
assign [class="^.*-wsF7$"] → number 260:F7
assign [class="^.*-wsF8$"] → number 270:F8
assign [class="^.*-wsC1$"] → number 100:C1
assign [class="^.*-wsC2$"] → number 110:C2
assign [class="^.*-wsC3$"] → number 120:C3
assign [class="^.*-wsC4$"] → number 130:C4
assign [class="^.*-wsC5$"] → number 140:C5
assign [class="^.*-wsC6$"] → number 150:C6
assign [instance="^.*-ws1$"] → number 0:1
assign [instance="^.*-ws2$"] → number 10:2
assign [instance="^.*-ws3$"] → number 20:3
assign [instance="^.*-ws4$"] → number 30:4
assign [instance="^.*-ws5$"] → number 40:5
assign [instance="^.*-ws6$"] → number 50:6
assign [instance="^.*-ws7$"] → number 60:7
assign [instance="^.*-ws8$"] → number 70:8
assign [instance="^.*-ws9$"] → number 80:9
assign [instance="^.*-wsF1$"] → number 200:F1
assign [instance="^.*-wsF2$"] → number 210:F2
assign [instance="^.*-wsF3$"] → number 220:F3
assign [instance="^.*-wsF4$"] → number 230:F4
assign [instance="^.*-wsF5$"] → number 240:F5
assign [instance="^.*-wsF6$"] → number 250:F6
assign [instance="^.*-wsF7$"] → number 260:F7
assign [instance="^.*-wsF8$"] → number 270:F8
assign [instance="^.*-wsC1$"] → number 100:C1
assign [instance="^.*-wsC2$"] → number 110:C2
assign [instance="^.*-wsC3$"] → number 120:C3
assign [instance="^.*-wsC4$"] → number 130:C4
assign [instance="^.*-wsC5$"] → number 140:C5
assign [instance="^.*-wsC6$"] → number 150:C6

# >>> START Bindings Group: subworkspaces <<< #
# === Switch to subworkspace ===
bindcode $altgr+$kc_j exec i3wsmgr-msg subws switch 0
bindcode $altgr+$kc_k exec i3wsmgr-msg subws switch 1
bindcode $altgr+$kc_l exec i3wsmgr-msg subws switch 2
bindcode $altgr+$kc_semicolon exec i3wsmgr-msg subws switch 3
bindcode $altgr+$kc_squote exec i3wsmgr-msg subws switch 4
bindcode $altgr+$kc_bslash exec i3wsmgr-msg subws switch 5

# === Move to subworkspace ===
bindcode $altgr+Shift+$kc_j exec i3wsmgr-msg subws move 0
bindcode $altgr+Shift+$kc_k exec i3wsmgr-msg subws move 1
bindcode $altgr+Shift+$kc_l exec i3wsmgr-msg subws move 2
bindcode $altgr+Shift+$kc_semicolon exec i3wsmgr-msg subws move 3
bindcode $altgr+Shift+$kc_squote exec i3wsmgr-msg subws move 4
bindcode $altgr+Shift+$kc_bslash exec i3wsmgr-msg subws move 5

# >>> END Bindings Group: subworkspaces <<< #


# output bindings (empty if none defined)
bindcode $caps+$kc_backtick focus output DisplayPort-1
bindcode $caps+Shift+$kc_backtick move container to output DisplayPort-1

### i3wsmgr groups ###
# Group control (activation, clear...)
mode "groupctl" {
  # group activation
  bindsym a exec i3wsmgr-msg group activate a; mode "default"
  bindsym b exec i3wsmgr-msg group activate b; mode "default"
  bindsym c exec i3wsmgr-msg group activate c; mode "default"
  bindsym d exec i3wsmgr-msg group activate d; mode "default"
  bindsym e exec i3wsmgr-msg group activate e; mode "default"
  bindsym f exec i3wsmgr-msg group activate f; mode "default"
  bindsym g exec i3wsmgr-msg group activate g; mode "default"
  bindsym h exec i3wsmgr-msg group activate h; mode "default"
  bindsym i exec i3wsmgr-msg group activate i; mode "default"
  bindsym j exec i3wsmgr-msg group activate j; mode "default"
  bindsym k exec i3wsmgr-msg group activate k; mode "default"
  bindsym l exec i3wsmgr-msg group activate l; mode "default"
  bindsym m exec i3wsmgr-msg group activate m; mode "default"
  bindsym n exec i3wsmgr-msg group activate n; mode "default"
  bindsym o exec i3wsmgr-msg group activate o; mode "default"
  bindsym p exec i3wsmgr-msg group activate p; mode "default"
  bindsym q exec i3wsmgr-msg group activate q; mode "default"
  bindsym r exec i3wsmgr-msg group activate r; mode "default"
  bindsym s exec i3wsmgr-msg group activate s; mode "default"
  bindsym t exec i3wsmgr-msg group activate t; mode "default"
  bindsym u exec i3wsmgr-msg group activate u; mode "default"
  bindsym v exec i3wsmgr-msg group activate v; mode "default"
  bindsym w exec i3wsmgr-msg group activate w; mode "default"
  bindsym x exec i3wsmgr-msg group activate x; mode "default"
  bindsym y exec i3wsmgr-msg group activate y; mode "default"
  bindsym z exec i3wsmgr-msg group activate z; mode "default"

  # Clear the active group from all workspaces
  bindsym Delete       exec i3wsmgr-msg group clear active; mode "default"
  # Clear all groups from all workspaces
  bindsym Shift+Delete exec i3wsmgr-msg group clear all;    mode "default"

  bindsym Escape mode "default"
  bindsym $win+g mode "default"
}

bindsym $win+g mode "groupctl"

# focus on group members (indexed) (empty if not defined)
# >>> START Bindings Group: wsgroup <<< #
bindcode $menu+$kc_l exec i3wsmgr-msg group switch idx 0
bindcode $menu+$kc_semicolon exec i3wsmgr-msg group switch idx 1
bindcode $menu+$kc_squote exec i3wsmgr-msg group switch idx 2
bindcode $menu+$kc_bslash exec i3wsmgr-msg group switch idx 3
# >>> END Bindings Group: wsgroup <<< #


# focus on group members (relative)
bindcode $altgr+$kc_lt exec i3wsmgr-msg group switch rel left
bindcode $altgr+$kc_gt exec i3wsmgr-msg group switch rel right

# switch active groups
bindcode $altgr+Shift+$kc_lt exec i3wsmgr-msg group prev
bindcode $altgr+Shift+$kc_gt exec i3wsmgr-msg group next

# toggle group membership
bindcode $altgr+$kc_slash       exec i3wsmgr-msg group toggle
# clear all groups on the focused workspace
bindcode $altgr+Shift+$kc_slash exec i3wsmgr-msg group clear

### i3wsmgr wsmotion ###
# swap_pref (move workspace order)
bindsym $menu+Left          exec i3wsmgr-msg wsmotion swap pref left
bindsym $menu+Right         exec i3wsmgr-msg wsmotion swap pref right
# swap_full (swap worksapce contents)
bindsym $menu+Control+Left  exec i3wsmgr-msg wsmotion swap full left
bindsym $menu+Control+Right exec i3wsmgr-msg wsmotion swap full right
# move (move workspace order beg/end)
bindsym $menu+Up            exec i3wsmgr-msg wsmotion move end
bindsym $menu+Down          exec i3wsmgr-msg wsmotion move begin

### i3wsmgr dynws location pinning ###
bindsym $menu+End  exec i3wsmgr-msg dynws pin toggle end
bindsym $menu+Home exec i3wsmgr-msg dynws pin toggle begin

# jump to next,prev workspace
bindsym $win+Tab       workspace next_on_output
bindsym $win+Shift+Tab workspace prev_on_output

# focus on left/right output
bindsym $caps+Tab          focus output right
bindsym $caps+Shift+Tab    focus output left
bindsym $win+Control+Right focus output right
bindsym $win+Control+Left  focus output left

# move focused container to left/right output
bindsym $win+Control+Shift+Left move container to output left; focus output left
bindsym $win+Control+Shift+Right move container to output right; focus output right

# move focused workspace to left/right output
bindsym $win+$alt+Left  move workspace to output left
bindsym $win+$alt+Right move workspace to output right

# focus on primary output
bindsym $altgr+m       focus output primary
bindsym $altgr+Shift+m move container to output primary; focus output primary

### i3wsmgr subws additional stuff ###
bindsym $altgr+i exec i3wsmgr-msg ws subwsrecords ignore toggle
bindsym $altgr+c exec i3wsmgr-msg ws subwsrecords clear

bindcode $menu+$kc_lt exec i3wsmgr-msg subws switch_pos left
bindcode $menu+$kc_gt exec i3wsmgr-msg subws switch_pos right

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $win+Shift+r reload
# exit i3 (logs you out of your X session)
bindsym $win+Shift+e exec "i3_nagbar_exit_wrapper"

# resize window (you can also use the mouse for that)
mode "resize" {
  # delta-resize windows
  bindsym         Left resize shrink width 100 px or 100 ppt
  bindsym Control+Left resize shrink width 200 px or 200 ppt
  bindsym   Shift+Left resize shrink width 20 px or 20 ppt
  bindsym         Down resize grow height 100 px or 100 ppt
  bindsym Control+Down resize grow height 200 px or 200 ppt
  bindsym   Shift+Down resize grow height 20 px or 20 ppt
  bindsym         Up resize shrink height 100 px or 100 ppt
  bindsym Control+Up resize shrink height 200 px or 200 ppt
  bindsym   Shift+Up resize shrink height 20 px or 20 ppt
  bindsym         Right resize grow width 100 px or 100 ppt
  bindsym Control+Right resize grow width 200 px or 200 ppt
  bindsym   Shift+Right resize grow width 20 px or 20 ppt

  # back to normal
  bindsym Return mode "default"
  bindsym Escape mode "default"
  bindsym q      mode "default"
}

bindsym $win+r mode "resize"

##### keybindings for floating window management #####

set $movpos i3-msg move position
set $setsize i3-msg resize set

#### Floating Window Sizes
#- Ideally we would read those from another config because the floating control scripts need the sizes too.
#  (For the notification)
#########################

set $floating_size_calendar 680 700
set $floating_size_small 720 480
set $floating_size_medium 1080 720
set $floating_size_large 1400 750
set $floating_size_dyn1 2560 1200
set $floating_size_dyn2 3165 1525
set $floating_size_dyn3 750 1080

mode "floating-mgmt" {
  # switch to workspace
  bindsym $win+1 exec i3wsmgr-msg ws switch 1
  bindsym $win+2 exec i3wsmgr-msg ws switch 2
  bindsym $win+3 exec i3wsmgr-msg ws switch 3
  bindsym $win+4 exec i3wsmgr-msg ws switch 4
  bindsym $win+5 exec i3wsmgr-msg ws switch 5
  bindsym $win+6 exec i3wsmgr-msg ws switch 6
  bindsym $win+7 exec i3wsmgr-msg ws switch 7
  bindsym $win+8 exec i3wsmgr-msg ws switch 8
  bindsym $win+9 exec i3wsmgr-msg ws switch 9
  bindsym $win+F1 exec i3wsmgr-msg ws switch F1
  bindsym $win+F2 exec i3wsmgr-msg ws switch F2
  bindsym $win+F3 exec i3wsmgr-msg ws switch F3
  bindsym $win+F4 exec i3wsmgr-msg ws switch F4
  bindsym $win+F5 exec i3wsmgr-msg ws switch F5
  bindsym $win+F6 exec i3wsmgr-msg ws switch F6
  bindsym $win+F7 exec i3wsmgr-msg ws switch F7
  bindsym $win+F8 exec i3wsmgr-msg ws switch F8
  bindsym $caps+1 exec i3wsmgr-msg ws switch C1
  bindsym $caps+2 exec i3wsmgr-msg ws switch C2
  bindsym $caps+3 exec i3wsmgr-msg ws switch C3
  bindsym $caps+4 exec i3wsmgr-msg ws switch C4
  bindsym $caps+5 exec i3wsmgr-msg ws switch C5
  bindsym $caps+6 exec i3wsmgr-msg ws switch C6

# >>> START Bindings Group: subworkspaces <<< #
# === Switch to subworkspace ===
bindcode $altgr+$kc_j exec i3wsmgr-msg subws switch 0
bindcode $altgr+$kc_k exec i3wsmgr-msg subws switch 1
bindcode $altgr+$kc_l exec i3wsmgr-msg subws switch 2
bindcode $altgr+$kc_semicolon exec i3wsmgr-msg subws switch 3
bindcode $altgr+$kc_squote exec i3wsmgr-msg subws switch 4
bindcode $altgr+$kc_bslash exec i3wsmgr-msg subws switch 5

# === Move to subworkspace ===
bindcode $altgr+Shift+$kc_j exec i3wsmgr-msg subws move 0
bindcode $altgr+Shift+$kc_k exec i3wsmgr-msg subws move 1
bindcode $altgr+Shift+$kc_l exec i3wsmgr-msg subws move 2
bindcode $altgr+Shift+$kc_semicolon exec i3wsmgr-msg subws move 3
bindcode $altgr+Shift+$kc_squote exec i3wsmgr-msg subws move 4
bindcode $altgr+Shift+$kc_bslash exec i3wsmgr-msg subws move 5

# >>> END Bindings Group: subworkspaces <<< #


  # Move window to center
  bindsym c exec "i3_floating_control -m center"

  #! TODO: For some reasons it's not entirely perfectly centered. Will probably require its own script to calculate thoroughly
  # Move side window to right
  bindsym r exec "i3_floating_control -m right"
  # Move side window to the left
  bindsym l exec "i3_floating_control -m left"

  bindsym 1 resize set $floating_size_dyn1
  bindsym 2 resize set $floating_size_dyn2
  bindsym 3 resize set $floating_size_dyn3

  # To allow focusing in this mode
  bindsym Left focus left
  bindsym Down focus down
  bindsym Up focus up
  bindsym Right focus right

  bindsym $win+space floating toggle
  bindsym space focus mode_toggle

  # Bindings to get back to normal mode
  bindsym q mode "default"
  bindsym Escape mode "default"
  bindsym Return mode "default"
  bindsym $win+Shift+f mode "default"
}

# Switch to floating-mgmt mode and display help notification
bindsym $win+Shift+f exec "i3-msg mode floating-mgmt && i3_floating_help_notification"

workspace_auto_back_and_forth yes

# turn of all borders
for_window [class="^.*"] border pixel 0

# Window -> Workspace Pins (if empty, none configured)
assign [class="Element"] → number 30:4
assign [class="TelegramDesktop"] → number 30:4
assign [class="Signal"] → number 30:4
assign [class="KeePassXC"] _autodyn:kpxc>
assign [class="kitty-startup"] → number 0:1
assign [class="qBittorrent"] → number 60:7
assign [class="kitty-ncmpcpp-main"] → number 10:2

# Window Auto Settings (if empty, none configured)

# Apply settings for: nemo-float
for_window [class="nemo-float"] floating enable
for_window [class="nemo-float"] resize set $floating_size_small
for_window [class="nemo-float"] move position center

# Apply settings for: kitty-ncmpcpp
for_window [class="kitty-ncmpcpp"] floating enable
for_window [class="kitty-ncmpcpp"] resize set $floating_size_large
for_window [class="kitty-ncmpcpp"] move position center

# Apply settings for: kitty-ncmpcpp-main
for_window [class="kitty-ncmpcpp-main"] floating enable
for_window [class="kitty-ncmpcpp-main"] resize set $floating_size_dyn1
for_window [class="kitty-ncmpcpp-main"] move position center

# Apply settings for: Element
for_window [class="Element"] floating enable
for_window [class="Element"] resize set $floating_size_dyn2
for_window [class="Element"] move position center

# Apply settings for: TelegramDesktop
for_window [class="TelegramDesktop"] floating enable

# Apply settings for: SpeedCrunch
for_window [class="SpeedCrunch"] floating enable

# Apply settings for: Signal
for_window [class="Signal"] floating enable

# All floating sizes for kitty
for_window [class="kitty-float-calendar"] floating enable
for_window [class="kitty-float-calendar"] resize set $floating_size_calendar
for_window [class="kitty-float-calendar"] move position center
for_window [class="kitty-float-small"] floating enable
for_window [class="kitty-float-small"] resize set $floating_size_small
for_window [class="kitty-float-small"] move position center
for_window [class="kitty-float-medium"] floating enable
for_window [class="kitty-float-medium"] resize set $floating_size_medium
for_window [class="kitty-float-medium"] move position center
for_window [class="kitty-float-large"] floating enable
for_window [class="kitty-float-large"] resize set $floating_size_large
for_window [class="kitty-float-large"] move position center


# >>> START Bindings Group: generic <<< #
# === Terminal Controls ===
bindsym $win+Return exec $term
bindsym $caps+Return exec $term
bindsym $win+Shift+Return exec $term zsh
bindsym $win+$alt+Return exec exec $term --class kitty-float-small
bindsym $win+Shift+t exec $term --class kitty-float-medium htop
bindsym $win+Shift+g exec $term --class kitty-float-medium glances

# === Misc Applications ===
bindsym $win+b exec env MOZ_DISABLE_RDD_SANDBOX=1 firefox
bindsym $win+Shift+b exec env MOZ_DISABLE_RDD_SANDBOX=1 firefox --private-window
bindsym $win+Shift+c exec speedcrunch
bindsym $win+t exec nemo --class nemo-float
bindsym $caps+c exec term --class kitty-float-calendar /usr/local/bin/i3_calendar

# === Screenshot Stuff ===
# Free selection screenshot
bindsym Control+Print exec maim_wrapper -s -u
# Free selection screenshot with freeze
bindsym $win+Print exec maim_wrapper --freeze -s -u
# Current window screenshot
bindsym Control+Shift+Print exec maim_wrapper --current-window
# Fullscreen screenshot
bindsym Print exec maim_wrapper -i root

# === Other Stuff ===
bindsym $caps+f exec mpc -f '%artist% - (%date%) %album% - %title%' | head -1 >> ~/media/music/faves.log
bindsym $win+$alt+n exec i3_pa_null_sink_ctrl -n -t
bindsym Control+q nop

# >>> END Bindings Group: generic <<< #



#### Media Hotkeys ####
# media_control using MPC
# media_control action: toggle
bindsym $win+$alt+c exec "i3_mpd_control --pa-sink-suspend toggle"
# media_control action: next
bindcode $win+Shift+94 exec "i3_mpd_control --pa-sink-suspend next"
# media_control action: prev
bindcode $win+Control+94 exec "i3_mpd_control --pa-sink-suspend prev"
# toggle pulse audio sink suspend state
bindsym $win+$alt+s exec "i3_pa_sink_suspend_ctrl -n -t"


bindsym $win+y mode "yubikey"

mode "yubikey" {
       bindsym 1 exec "ykrm-allow --notify 1 min"; mode "default"
       bindsym 2 exec "ykrm-allow --notify 2 min"; mode "default"
       bindsym 3 exec "ykrm-allow --notify 3 min"; mode "default"
       bindsym 4 exec "ykrm-allow --notify 4 min"; mode "default"
       bindsym 5 exec "ykrm-allow --notify 5 min"; mode "default"
       bindsym r exec "ykrm-allow --reset --notify"; mode "default"


       bindsym Escape mode "default"
       bindsym $win+y mode "default"
}

#### Gaps ####
# If empty, gaps are not defined

gaps inner 4

#### Autostart Stuff ####

# i3::autostart_commands and i3::autostart_always_commands
exec        "/usr/local/share/i3/autostart.sh"
exec_always "/usr/local/share/i3/autostart_always.sh"

exec_always i3wsmgr_launch
exec startup_shell kitty-tmux
exec_always xorg_xmodmap_launch
exec --no-startup-id /usr/local/bin/picom_launch
exec_always --no-startup-id feh --bg-fill "/usr/local/share/wallpapers/arch-01.png"
exec --no-startup-id xset s off -dpms
exec --no-startup-id dunst
exec_always --no-startup-id polybar_launch
exec --no-startup-id unclutter
exec --no-startup-id kitty_onstartup_wrapper --class kitty-ncmpcpp-main --config ~/.config/kitty/kitty_ncmpcpp.conf ncmpcpp
exec --no-startup-id element-desktop
exec --no-startup-id keepassxc
exec_always xorg_xbindkeys_launch

# i3::exec_commands (empty if none defined)

# i3::exec_always_commands (empty if none defined)

##### Colors ######

# class                 border  backgr. text    indicator child_border
client.focused          #4B0082 #4B0082 #ffffff #2e9ef4   #285577
client.focused_inactive #252e3b #252e3b #ffffff #484e50   #5f676a
client.unfocused        #000000 #000000 #888888 #292d2e   #222222
client.urgent           #af5e02 #af5e02 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

client.background       #ffffff

